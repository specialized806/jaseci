site_name: The Jac Programming Language and Jaseci Stack
site_url: https://jac-lang.org
repo_url: https://github.com/Jaseci-Labs/jaseci
edit_uri: edit/main/docs/docs
use_directory_urls: true
nav:
  - Learn:
    # - Getting Started: "learn/getting_started.md"
    - Tour of Jac/Jaseci: "learn/introduction.md"
    - Installation: "learn/installation.md"
    - Learn Jac in 5 Minutes: "learn/jac_in_a_flash.md"
    - Jac Playground: "learn/jac_playground.md"
    - Learn By Example:
      - LittleX (your own twitter):
        - "learn/examples/littleX/tutorial.md"
        # - "learn/examples/littleX/full_guide.md"
      - Jac MCP Conversational Chatbot:
        - "learn/examples/rag_chatbot/Overview.md"
        # - "learn/examples/rag_chatbot/Tutorial.md"
      - RPG game with AI Genarated Maps: "learn/examples/mtp_examples/rpg_game.md"
      - Agentic Fantasy Trading Game: "learn/examples/mtp_examples/fantasy_trading_game.md"
    - Learn Jac Language (WIP):
      - Introduction: "jac_book/index.md"
      - 1. Welcome to Jac: "jac_book/chapter_1.md"
      - 2. Variables, Types, and Basic Syntax: "jac_book/chapter_2.md"
      - 3. Functions, Control Flow, and Collections in Jac: "jac_book/chapter_3.md"
      - 4. AI functions and Decorators: "jac_book/chapter_4.md"
      - 5. Advanced AI Operations: "jac_book/chapter_5.md"
      - 6. Imports System and File Operations: "jac_book/chapter_6.md"
      - 7. Enhanced OOP - Objects and Classes: "jac_book/chapter_7.md"
      - 8. OSP Introduction and Paradigm Shift: "jac_book/chapter_8.md"
      - 9. Nodes and Edges: "jac_book/chapter_9.md"
      - 10. Walkers and Abilities: "jac_book/chapter_10.md"
      - 11. Advanced Object Spatial Operations: "jac_book/chapter_11.md"
      - 12. Walkers as API Endpoints: "jac_book/chapter_12.md"
      - 13. Persistence and the Root Node: "jac_book/chapter_13.md"
      - 14. Multi-User Architecture and Permissions: "jac_book/chapter_14.md"
      - 15. Advanced Jac Cloud Features: "jac_book/chapter_15.md"
      - 16. Type System Deep Dive: "jac_book/chapter_16.md"
      - 17. Testing and Debugging: "jac_book/chapter_17.md"
      - 18. Deployment Strategies: "jac_book/chapter_18.md"
      - 19. Performance Optimization: "jac_book/chapter_19.md"
      - 20. Python to Jac Migration: "jac_book/chapter_20.md"
    - Programming 'by' AI:
        - What is MTP: "learn/jac-byllm/with_llm.md"
        - Quick-start: "learn/jac-byllm/quickstart.md"
        - How to use MTP: "learn/jac-byllm/usage.md"
        - Python byllm Interface: "learn/jac-byllm/python_integration.md"
        - Using Multimodal models: "learn/jac-byllm/multimodality.md"
        - Build your own byllm plugin: "learn/jac-byllm/creating_byllm_plugins.md"
        - LiteLLM Proxy Server: "learn/jac-byllm/litellm_proxy.md"
    - Scale-Native Programming:
      - "learn/jac-cloud/introduction.md"
      - "learn/jac-cloud/quickstart.md"
      - Core Features:
        - "learn/jac-cloud/permission.md"
        - "learn/jac-cloud/logging.md"
        - "learn/jac-cloud/env_vars.md"
      - Real-time & Async:
        - "learn/jac-cloud/websocket.md"
        - "learn/jac-cloud/scheduler.md"
        - "learn/jac-cloud/async_walker.md"
        - "learn/jac-cloud/webhook.md"
      - Operations:
        - "learn/jac-cloud/deployment.md"
        - "learn/jac-cloud/utilities.md"
      - Jac Lens: "learn/jac-lens.md"
    - Tooling:
      - "learn/tools/cli.md"
      - "learn/tools/streamlit.md"
    - Specifications:
      - Jac Keywords: "learn/keywords.md"
      - Object-Spatial Programming Specification: "learn/dspfoundation.md"
      - Full Language Specification: "learn/jac_ref.md"
    - Misc Docs:
      - Understanding Object-Spatial:
        - "learn/data_spatial/nodes_and_edges.md" # Introduction to DS primitives
        - "learn/data_spatial/walkers.md" # Walker
        - "learn/data_spatial/filtering.md" # Filtering
        - "learn/data_spatial/sequence.md"
      - FAQ: "learn/data_spatial/FAQ.md" # faq


  - Community Hub:
    - Roadmap: "communityhub/roadmap.md"
    - Release Notes: "communityhub/release_notes.md"
    - Breaking Changes: "communityhub/breaking_changes.md"
    - Leaderboard: "communityhub/top_contributors.md"
    - Fun Stuff:
      - Project Ideas:
        - "communityhub/fun/projects.md"
        - "communityhub/fun/p1.md"
        - "communityhub/fun/p2.md"
        - "communityhub/fun/p3.md"
      - Content Pieces: "communityhub/content_pieces.md"
    - Internals:
      - Contributing: "internals/contrib.md"
      - Design Docs and Guides:
        - Compiler/Runtime Design: "internals/internals.md"
        - Static Compilation:
          - Sym Table Design Docs:
            - "internals/symbol_tables/index.md"
            - "internals/symbol_tables/structure.md"
            - "internals/symbol_tables/building.md"
            - "internals/symbol_tables/def_use.md"
            - "internals/symbol_tables/linking.md"
            - "internals/symbol_tables/resolution.md"
          - UniIR Nodes: "internals/uniir_node.md"
        - Runtime Plugin Interface: "internals/jac_plugins.md"
        - main py plugin Interface: "internals/plugin_documentation.md"
      - Planning Specs and Docs:
        - Language Ref Roadmap: "internals/planning_specs/ref_roadmap.md"
        - Archetype Lifecycle Enhancement Roadmap: "internals/planning_specs/spawn_life_cycle.md"
        - Error System: "internals/planning_specs/error_system.md"
        - Formatter System: "internals/planning_specs/formatter_system.md"
        - Native Type System:
          - Introduction: "internals/planning_specs/native_type_system/index.md"
          - Architecture: "internals/planning_specs/native_type_system/architecture.md"
          - Type Representation: "internals/planning_specs/native_type_system/type_representation.md"
          - Type Resolution: "internals/planning_specs/native_type_system/type_resolution.md"
          - Type Rules: "internals/planning_specs/native_type_system/type_rules.md"
          - Type Inference: "internals/planning_specs/native_type_system/type_inference.md"
          - Compiler Integration: "internals/planning_specs/native_type_system/compiler_integration.md"
          - Let's Build: "internals/planning_specs/native_type_system/lets_build.md"


  - Jac Playground:
    - Playground: "/playground/"

  - Jac GPT: "https://jac-gpt.jaseci.org"

theme:
  logo: "assets/logo.png"
  name: "material"
  custom_dir: overrides
  palette:
    scheme: "slate"
    primary: "black"
    accent: "orange"
  font:
    text: "Roboto"
    code: "Roboto Mono"
  features:
    - content.code.copy
    - content.action.edit
    - content.action.view
    - navigation.instant: false
    - navigation.tracking
    - navigation.tabs
    - navigation.path
    - navigation.footer
    # - navigation.expand
    # - navigation.sections
    - navigation.top
  icon:
    admonition:
      note: octicons/tag-16
      abstract: octicons/checklist-16
      info: octicons/info-16
      tip: material/fire
      success: octicons/check-16
      question: octicons/question-16
      warning: octicons/alert-16
      failure: octicons/x-circle-16
      danger: octicons/zap-16
      bug: octicons/bug-16
      example: octicons/beaker-16
      quote: octicons/quote-16

markdown_extensions:
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
      pygments_style: "autumn"
  - pymdownx.inlinehilite
  - pymdownx.snippets:
      base_path: [".", "../"]
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.blocks.caption
  - attr_list
  - md_in_html
  - attr_list
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - tables
  - toc:
        permalink: "#"


extra_css:
  - extra.css

extra:
  generator: false
  social:
    - icon: fontawesome/brands/mastodon
      link: https://fosstodon.org/@squidfunk
copyright: Copyright &copy; 2025 Jac Hackers Everwhere

extra_javascript:
  - assets/mathjax-config.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - https://cdn.jsdelivr.net/pyodide/v0.27.0/full/pyodide.js
  - https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.js
  - https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.52.2/min/vs/loader.min.js
  - js/jac.monarch.js
  - js/run-code.js
  - js/feedback.js

plugins:
  - search
  - open-in-new-tab
  - mkdocs-video:
      is_video: True
      video_autoplay: True
      # video_loop: True
      video_controls: False

hooks:
  - scripts/handle_jac_compile_data.py
